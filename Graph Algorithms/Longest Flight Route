#include<bits/stdc++.h>
using namespace std;
const int N=1e5+5;
vector<int> g[N];
int dp[N],pa[N],n,m;
vector<int> ans;
bool chk=true;
 
inline int rec(int x){
//	cout << x << ' ' << dp[x] << ' ' << chk << "\n";
  if(dp[x]!=-1) return dp[x];
  int cnt=0;
  if(x==n){
  	chk=false;
  	return 1;
  }  
  for(auto e:g[x]){
    int sum=rec(e)+1;
    if(cnt<sum && chk==false){
//      if(cnt<sum){
	      pa[x]=e;
	      cnt=sum;      	
//	  }
 
    }
  
    // cnt=max(rec(e)+1,cnt);
  }
  return dp[x]=cnt;
}
 
int main(){
  ios::sync_with_stdio(0); cin.tie(0);
  cin >> n >> m;
  for(int i=1;i<=m;i++){
    int a,b;
    cin >> a >> b;
    g[a].push_back(b);
  }
  memset(dp,-1,sizeof dp);
    rec(1);
      int id=pa[1];
      ans.push_back(1);
      while(id!=0){
        ans.push_back(id);
        id=pa[id];
      }
  if(ans.size()==0 || ans.size()==1) cout << "IMPOSSIBLE";
  else{
     cout << ans.size() << "\n";
     for(auto e:ans) cout << e <<' ';  	
  	
  }
//  cout << "\n";
//  for(int i=1;i<=n;i++) cout << pa[i] << ' ';
//  
//  cout << "\n";
//  for(int i=1;i<=n;i++) cout << dp[i] << ' ';
}